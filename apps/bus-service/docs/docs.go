// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/bus-lines": {
            "get": {
                "description": "Retrieve a list of bus lines",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bus Lines"
                ],
                "summary": "Get bus lines",
                "responses": {
                    "200": {
                        "description": "List of bus lines",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BusLine"
                            }
                        }
                    }
                }
            }
        },
        "/api/bus-stations": {
            "get": {
                "description": "Retrieve a list of bus stations with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bus Stations"
                ],
                "summary": "Get bus stations",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit the number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by bus station name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by bus line",
                        "name": "line",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bus stations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BusStation"
                            }
                        }
                    }
                }
            }
        },
        "/api/bus-stations/{id}": {
            "get": {
                "description": "Retrieve a bus station by its id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bus Stations"
                ],
                "summary": "Get bus station by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bus station id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bus station details",
                        "schema": {
                            "$ref": "#/definitions/BusStation"
                        }
                    }
                }
            }
        },
        "/api/departures": {
            "get": {
                "description": "Retrieve departures between two bus stations on a specific date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departures"
                ],
                "summary": "Get departures",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Departure station code",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Arrival station code",
                        "name": "to",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date in YYYY-MM-DD format",
                        "name": "date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of departures",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimetableRow"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "BusLine": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "BusStation": {
            "type": "object",
            "properties": {
                "codes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string"
                },
                "lat": {
                    "type": "number"
                },
                "lon": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "TimetableRow": {
            "type": "object",
            "properties": {
                "arriveAt": {
                    "type": "string"
                },
                "departureAt": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "distance": {
                    "type": "number"
                },
                "duration": {
                    "type": "string"
                },
                "fromStation": {
                    "$ref": "#/definitions/TimetableRow.Station"
                },
                "line": {
                    "type": "string"
                },
                "toStation": {
                    "$ref": "#/definitions/TimetableRow.Station"
                }
            }
        },
        "TimetableRow.Station": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "MBus Bus Service API",
	Description:      "This is the API for the MBus Bus Service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
