services:
  db:
    image: postgres:16
    container_name: mbus_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: mbus_redis
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6378:6379"
    volumes:
      - redisdata:/data

  backend:
    container_name: mbus_backend
    build:
      context: ./apps/bus-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
    environment:
      POSTGRES_URL: ${POSTGRES_URL}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_ADDR: ${REDIS_ADDR}
      ORS_API_KEY: ${ORS_API_KEY}

  frontend:
    container_name: mbus_frontend
    build:
      context: ./apps/web
      dockerfile: Dockerfile
      args:
        VITE_API_URL: /api
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    ports:
      - "3000:80"
    volumes:
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
        - frontend
        - backend

volumes:
  pgdata:
  redisdata:


# https://medium.com/@nomannayeem/from-scratch-to-full-stack-hosting-a-react-and-flask-app-with-nginx-docker-39bad3598a1d
# https://www.docker.com/blog/how-to-dockerize-react-app/
# https://blog.devops.dev/devops-docker-series-local-dev-reactjs-nginx-setup-c7b55b8e3c7d